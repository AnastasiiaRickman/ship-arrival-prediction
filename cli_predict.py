import logging
import pandas as pd
import argparse
from preprocessing.predict_helpers import preprocess_input_data, predict_eta_from_new_data

logging.basicConfig(level=logging.DEBUG)

def main(file_path):
    logging.debug("üî• cli_predict.py –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è")
    logging.debug(f"üìÇ –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Ñ–∞–π–ª–∞: {file_path}")
    
    try:
        df_raw = pd.read_csv(file_path)
        logging.debug("‚úÖ –§–∞–π–ª –∑–∞–≥—Ä—É–∂–µ–Ω —É—Å–ø–µ—à–Ω–æ.")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —á—Ç–µ–Ω–∏–∏ CSV: {e}")
        return

    try:
        df_processed = preprocess_input_data(df_raw)
        logging.debug("‚úÖ –î–∞–Ω–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ.")
        result = predict_eta_from_new_data(df_processed)
        logging.debug("‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ –≤—ã–ø–æ–ª–Ω–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ.")

        logging.info("\n‚úÖ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ:")
        logging.info(f"‚è± ETA_diff (—Å–µ–∫): {result['eta_diff_seconds']:.2f}")
        logging.info(f"üìç –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–Ω—ã–π ETA: {result['eta']}")
        logging.info(f"üïì –ü–æ—Å–ª–µ–¥–Ω—è—è –æ—Ç–º–µ—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–∏: {result['base_time']}")
    except Exception as e:
        logging.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–∏: {e}")

if __name__ == "__main__":
    parser = argparse.ArgumentParser(description="üö¢ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ ETA –¥–ª—è —Ç—Ä–µ–∫–∞ —Å—É–¥–Ω–∞ –ø–æ CSV —Ñ–∞–π–ª—É")
    parser.add_argument('--file', type=str, required=True, help='–ü—É—Ç—å –∫ CSV —Ñ–∞–π–ª—É —Å –¥–∞–Ω–Ω—ã–º–∏')

    args = parser.parse_args()
    main(args.file)
